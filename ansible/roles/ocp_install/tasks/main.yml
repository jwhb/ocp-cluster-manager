---

# Generate install-config.yaml
- name: Create install directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0700
  loop:
    - "{{ ocp_install_install_dir }}"
    - "{{ ocp_install_install_tmp_dir }}"

- name: Generate install-config.yaml
  template:
    src: 'install-config.yaml.j2'
    dest: "{{ item }}"
    mode: 0600
  loop:
    - "{{ ocp_install_install_dir }}/install-config-{{ ocp_install_cluster_name }}.yaml"
    - "{{ ocp_install_install_tmp_dir }}/install-config.yaml"

# Start cluster deployment
- name: Info about cluster creation
  debug:
    msg: "You may follow the installation by viewing '{{ ocp_install_install_tmp_dir }}/.openshift_install.log' in another terminal window."

- name: Run openshift-install
  register: ocp_install_deploy_result
  command:
    creates: "{{ ocp_install_install_tmp_dir }}/terraform.tfstate"  # prevents redeployment
    cmd: "{{ ocp_install_openshift_install_command }} --dir '{{ ocp_install_install_tmp_dir }}' create cluster --log-level=info"
  # to run in background:
  # async: 3600  # 60 minutes timeout
  # poll: 0

- name: Post-installation tasks
  when: ocp_install_deploy_result.changed and not ansible_check_mode
  block:
    - name: Install new cluster's KUBECONFIG file
      when: (ocp_install_kubeconfig_to_home |Â bool)
      copy:
        src: "{{ ocp_install_install_tmp_dir }}/auth/kubeconfig"
        dest: "{{ lookup('env', 'HOME') }}/.kube/config"
        mode: '0600'

    - name: Display deployment info
      vars:
        msg_lines: |
          Password for kubeadmin user: {{ lookup('file', ocp_install_install_tmp_dir + '/auth/kubeadmin-password') }}
          To view the installation result, run:
            $ tail {{ ocp_install_install_tmp_dir }}/.openshift_install.log
      debug:
        msg: "{{ msg_lines.splitlines() }}"
