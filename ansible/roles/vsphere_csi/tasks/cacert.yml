---

- name: Create vCenter certificate bundle directory
  check_mode: false
  file:
    path: "{{ vsphere_csi_certbundle_destination }}"
    state: directory
    mode: "0750"

- name: Download vCenter certificate bundle
  unarchive:
    src: "{{ vsphere_csi_certbundle_url }}"
    dest: "{{ vsphere_csi_certbundle_destination }}"
    creates: "{{ vsphere_csi_certbundle_destination }}/certs/lin"
    remote_src: true
    validate_certs: "{{ not ansible_check_mode }}"  # disable tls check in check mode

- name: Create vCenter certificate bundle ConfigMap
  when: not ansible_check_mode
  vars:
    vsphere_csi_cacert_path: "{{ lookup('fileglob', vsphere_csi_certbundle_destination + '/certs/lin/*.0', wantlist=True)[0] }}"  # noqa var-spacing
  kubernetes.core.k8s:
    state: present
    api_version: v1
    kind: ConfigMap
    namespace: "{{ vsphere_csi_namespace }}"
    name: "vc-root-ca-cert"
    definition:
      data:
        cacert: "{{ lookup('file', vsphere_csi_cacert_path) }}"

- name: Assign vCenter certificate to CSI pods
  kubernetes.core.k8s:
    kind: Deployment
    namespace: "{{ vsphere_csi_namespace }}"
    name: vsphere-csi-controller
    resource_definition:
      spec:
        template:
          spec:
            volumes:
              - name: vc-root-ca-cert
                configMap:
                  name: vc-root-ca-cert
            containers:
              - name: vsphere-csi-controller
                volumeMounts:
                  - mountPath: /etc/ssl/certs/vcenter_cacert
                    subPath: cacert
                    name: vc-root-ca-cert
              - name: vsphere-syncer
                volumeMounts:
                  - mountPath: /etc/ssl/certs/vcenter_cacert
                    subPath: cacert
                    name: vc-root-ca-cert
